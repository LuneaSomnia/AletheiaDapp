service : {
  // Admin functions
  authorizeCaller : (principal: principal) -> ();
  revokeCaller : (principal: principal) -> ();
  getDataVersion : () -> (nat) query;
  
  // Core API
  appendVersion : (
    claimId: text,
    verdict: bool,
    evidenceHashes: vec text,
    aletheianIds: vec text
  ) -> (result);
  storeOriginalClaimText : (claimId: text, text: text) -> (result);
  queryByClaimText : (queryText: text) -> (vec text) query;
  readFullHistory : (claimId: text) -> (opt vec FactEntry) query;
  
  // Maintenance
  preupgrade : () -> ();
  postupgrade : () -> ();
}

type FactEntry = record {
  claimId: text;
  version: nat;
  timestamp: int;
  verdict: bool;
  evidenceHashes: vec text;
  aletheianIds: vec text;
};

type result = variant { ok; err: text };

type result = variant { ok; err: text };

type verdict = variant {
  True; MostlyTrue; HalfTruth; MisleadingContext; False; MostlyFalse;
  Unsubstantiated; Outdated; Satire; Opinion;
};

type factRecord = record {
  claim: text;
  verdict: verdict;
  explanation: text;
  evidence: vec record {
    sourceUrl: text;
    contentHash: text;
    credibilityScore: nat;
  };
  verifiedAt: int;
  aletheians: vec principal;
  version: nat;
  previousVersion: opt factRecord;
};
