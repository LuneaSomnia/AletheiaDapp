{"ast":null,"code":"import init, { bls_init, bls_verify } from '../vendor/bls/bls';\nexport let verify;\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns Promise resolving a boolean\n */\nexport async function blsVerify(pk, sig, msg) {\n  if (!verify) {\n    await init();\n    if (bls_init() !== 0) {\n      throw new Error('Cannot initialize BLS');\n    }\n    verify = (pk1, sig1, msg1) => {\n      // Reorder things from what the WASM expects (sig, m, w).\n      return bls_verify(sig1, msg1, pk1) === 0;\n    };\n  }\n  return verify(pk, sig, msg);\n}","map":{"version":3,"names":["init","bls_init","bls_verify","verify","blsVerify","pk","sig","msg","Error","pk1","sig1","msg1"],"sources":["C:\\Users\\pc\\Desktop\\aletheia-dapp\\aletheia-dapp\\canisters\\frontend\\user_interface\\node_modules\\@dfinity\\agent\\src\\utils\\bls.ts"],"sourcesContent":["import init, { bls_init, bls_verify } from '../vendor/bls/bls';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns Promise resolving a boolean\n */\nexport async function blsVerify(\n  pk: Uint8Array,\n  sig: Uint8Array,\n  msg: Uint8Array,\n): Promise<boolean> {\n  if (!verify) {\n    await init();\n    if (bls_init() !== 0) {\n      throw new Error('Cannot initialize BLS');\n    }\n    verify = (pk1, sig1, msg1) => {\n      // Reorder things from what the WASM expects (sig, m, w).\n      return bls_verify(sig1, msg1, pk1) === 0;\n    };\n  }\n  return verify(pk, sig, msg);\n}\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,mBAAmB;AAE9D,OAAO,IAAIC,MAAqE;AAEhF;;;;;;;AAOA,OAAO,eAAeC,SAASA,CAC7BC,EAAc,EACdC,GAAe,EACfC,GAAe;EAEf,IAAI,CAACJ,MAAM,EAAE;IACX,MAAMH,IAAI,EAAE;IACZ,IAAIC,QAAQ,EAAE,KAAK,CAAC,EAAE;MACpB,MAAM,IAAIO,KAAK,CAAC,uBAAuB,CAAC;;IAE1CL,MAAM,GAAGA,CAACM,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAI;MAC3B;MACA,OAAOT,UAAU,CAACQ,IAAI,EAAEC,IAAI,EAAEF,GAAG,CAAC,KAAK,CAAC;IAC1C,CAAC;;EAEH,OAAON,MAAM,CAACE,EAAE,EAAEC,GAAG,EAAEC,GAAG,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}