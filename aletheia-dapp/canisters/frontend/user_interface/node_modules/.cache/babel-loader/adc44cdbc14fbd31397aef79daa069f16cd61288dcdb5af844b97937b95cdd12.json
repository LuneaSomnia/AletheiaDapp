{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\aletheia-dapp\\\\aletheia-dapp\\\\canisters\\\\frontend\\\\user_interface\\\\src\\\\services\\\\auth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/services/auth.ts\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthClient } from '@dfinity/auth-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authClient, setAuthClient] = useState(null);\n  useEffect(() => {\n    const initAuth = async () => {\n      const client = await AuthClient.create();\n      setAuthClient(client);\n      if (await client.isAuthenticated()) {\n        setIsAuthenticated(true);\n        const identity = client.getIdentity();\n        const principal = identity.getPrincipal().toString();\n        // Fetch user data from canister in production\n        setUser({\n          principal,\n          learningPoints: 125,\n          submittedClaims: ['claim-001', 'claim-002']\n        });\n      }\n    };\n    initAuth();\n  }, []);\n  const authenticate = async () => {\n    if (!authClient) return;\n    await new Promise((resolve, reject) => {\n      authClient.login({\n        identityProvider: process.env.DFX_NETWORK === 'ic' ? 'https://identity.ic0.app' : `http://localhost:8000?canisterId=${process.env.INTERNET_IDENTITY_CANISTER_ID}`,\n        onSuccess: () => resolve(),\n        onError: reject\n      });\n    });\n    setIsAuthenticated(true);\n    const identity = authClient.getIdentity();\n    const principal = identity.getPrincipal().toString();\n    setUser({\n      principal,\n      learningPoints: 125,\n      submittedClaims: ['claim-001', 'claim-002']\n    });\n  };\n  const logout = async () => {\n    if (authClient) {\n      await authClient.logout();\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      authenticate,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FeAvdj/onary0AVfcPBQ19rLI1M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","AuthClient","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","authClient","setAuthClient","initAuth","client","create","identity","getIdentity","principal","getPrincipal","toString","learningPoints","submittedClaims","authenticate","Promise","resolve","reject","login","identityProvider","process","env","DFX_NETWORK","INTERNET_IDENTITY_CANISTER_ID","onSuccess","onError","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/aletheia-dapp/aletheia-dapp/canisters/frontend/user_interface/src/services/auth.tsx"],"sourcesContent":["// src/services/auth.ts\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Actor, HttpAgent } from '@dfinity/agent';\r\nimport { AuthClient } from '@dfinity/auth-client';\r\n\r\ninterface User {\r\n  principal: string;\r\n  username?: string;\r\n  learningPoints: number;\r\n  submittedClaims: string[];\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  authenticate: () => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authClient, setAuthClient] = useState<AuthClient | null>(null);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const client = await AuthClient.create();\r\n      setAuthClient(client);\r\n      \r\n      if (await client.isAuthenticated()) {\r\n        setIsAuthenticated(true);\r\n        const identity = client.getIdentity();\r\n        const principal = identity.getPrincipal().toString();\r\n        // Fetch user data from canister in production\r\n        setUser({\r\n          principal,\r\n          learningPoints: 125,\r\n          submittedClaims: ['claim-001', 'claim-002'],\r\n        });\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const authenticate = async () => {\r\n    if (!authClient) return;\r\n    \r\n    await new Promise<void>((resolve, reject) => {\r\n      authClient.login({\r\n        identityProvider: process.env.DFX_NETWORK === 'ic' \r\n          ? 'https://identity.ic0.app'\r\n          : `http://localhost:8000?canisterId=${process.env.INTERNET_IDENTITY_CANISTER_ID}`,\r\n        onSuccess: () => resolve(),\r\n        onError: reject,\r\n      });\r\n    });\r\n\r\n    setIsAuthenticated(true);\r\n    const identity = authClient.getIdentity();\r\n    const principal = identity.getPrincipal().toString();\r\n    setUser({\r\n      principal,\r\n      learningPoints: 125,\r\n      submittedClaims: ['claim-001', 'claim-002'],\r\n    });\r\n  };\r\n\r\n  const logout = async () => {\r\n    if (authClient) {\r\n      await authClient.logout();\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuthenticated, authenticate, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}