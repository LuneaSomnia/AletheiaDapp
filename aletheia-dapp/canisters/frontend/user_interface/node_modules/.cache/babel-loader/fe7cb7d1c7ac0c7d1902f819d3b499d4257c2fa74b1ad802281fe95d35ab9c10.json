{"ast":null,"code":"export class InputBox {\n  constructor(idl, ui) {\n    this.idl = idl;\n    this.ui = ui;\n    this.label = null;\n    this.value = undefined;\n    const status = document.createElement('span');\n    status.className = 'status';\n    this.status = status;\n    if (ui.input) {\n      ui.input.addEventListener('blur', () => {\n        if (ui.input.value === '') {\n          return;\n        }\n        this.parse();\n      });\n      ui.input.addEventListener('input', () => {\n        status.style.display = 'none';\n        ui.input.classList.remove('reject');\n      });\n    }\n  }\n  isRejected() {\n    return this.value === undefined;\n  }\n  parse(config = {}) {\n    if (this.ui.form) {\n      const value = this.ui.form.parse(config);\n      this.value = value;\n      return value;\n    }\n    if (this.ui.input) {\n      const input = this.ui.input;\n      try {\n        const value = this.ui.parse(this.idl, config, input.value);\n        if (!this.idl.covariant(value)) {\n          throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n        }\n        this.status.style.display = 'none';\n        this.value = value;\n        return value;\n      } catch (err) {\n        input.classList.add('reject');\n        this.status.style.display = 'block';\n        this.status.innerHTML = 'InputError: ' + err.message;\n        this.value = undefined;\n        return undefined;\n      }\n    }\n    return null;\n  }\n  render(dom) {\n    const container = document.createElement('span');\n    if (this.label) {\n      const label = document.createElement('label');\n      label.innerText = this.label;\n      container.appendChild(label);\n    }\n    if (this.ui.input) {\n      container.appendChild(this.ui.input);\n      container.appendChild(this.status);\n    }\n    if (this.ui.form) {\n      this.ui.form.render(container);\n    }\n    dom.appendChild(container);\n  }\n}\nexport class InputForm {\n  constructor(ui) {\n    this.ui = ui;\n    this.form = [];\n  }\n  renderForm(dom) {\n    if (this.ui.container) {\n      this.form.forEach(e => e.render(this.ui.container));\n      dom.appendChild(this.ui.container);\n    } else {\n      this.form.forEach(e => e.render(dom));\n    }\n  }\n  render(dom) {\n    if (this.ui.open && this.ui.event) {\n      dom.appendChild(this.ui.open);\n      const form = this;\n      // eslint-disable-next-line\n      form.ui.open.addEventListener(form.ui.event, () => {\n        // Remove old form\n        if (form.ui.container) {\n          form.ui.container.innerHTML = '';\n        } else {\n          const oldContainer = form.ui.open.nextElementSibling;\n          if (oldContainer) {\n            oldContainer.parentNode.removeChild(oldContainer);\n          }\n        }\n        // Render form\n        form.generateForm();\n        form.renderForm(dom);\n      });\n    } else {\n      this.generateForm();\n      this.renderForm(dom);\n    }\n  }\n}\nexport class RecordForm extends InputForm {\n  constructor(fields, ui) {\n    super(ui);\n    this.fields = fields;\n    this.ui = ui;\n  }\n  generateForm() {\n    this.form = this.fields.map(([key, type]) => {\n      const input = this.ui.render(type);\n      // eslint-disable-next-line\n      if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n        input.label = this.ui.labelMap[key] + ' ';\n      } else {\n        input.label = key + ' ';\n      }\n      return input;\n    });\n  }\n  parse(config) {\n    const v = {};\n    this.fields.forEach(([key, _], i) => {\n      const value = this.form[i].parse(config);\n      v[key] = value;\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\nexport class TupleForm extends InputForm {\n  constructor(components, ui) {\n    super(ui);\n    this.components = components;\n    this.ui = ui;\n  }\n  generateForm() {\n    this.form = this.components.map(type => {\n      const input = this.ui.render(type);\n      return input;\n    });\n  }\n  parse(config) {\n    const v = [];\n    this.components.forEach((_, i) => {\n      const value = this.form[i].parse(config);\n      v.push(value);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\nexport class VariantForm extends InputForm {\n  constructor(fields, ui) {\n    super(ui);\n    this.fields = fields;\n    this.ui = ui;\n  }\n  generateForm() {\n    const index = this.ui.open.selectedIndex;\n    const [_, type] = this.fields[index];\n    const variant = this.ui.render(type);\n    this.form = [variant];\n  }\n  parse(config) {\n    const select = this.ui.open;\n    const selected = select.options[select.selectedIndex].value;\n    const value = this.form[0].parse(config);\n    if (value === undefined) {\n      return undefined;\n    }\n    const v = {};\n    v[selected] = value;\n    return v;\n  }\n}\nexport class OptionForm extends InputForm {\n  constructor(ty, ui) {\n    super(ui);\n    this.ty = ty;\n    this.ui = ui;\n  }\n  generateForm() {\n    if (this.ui.open.checked) {\n      const opt = this.ui.render(this.ty);\n      this.form = [opt];\n    } else {\n      this.form = [];\n    }\n  }\n  parse(config) {\n    if (this.form.length === 0) {\n      return [];\n    } else {\n      const value = this.form[0].parse(config);\n      if (value === undefined) {\n        return undefined;\n      }\n      return [value];\n    }\n  }\n}\nexport class VecForm extends InputForm {\n  constructor(ty, ui) {\n    super(ui);\n    this.ty = ty;\n    this.ui = ui;\n  }\n  generateForm() {\n    const len = +this.ui.open.value;\n    this.form = [];\n    for (let i = 0; i < len; i++) {\n      const t = this.ui.render(this.ty);\n      this.form.push(t);\n    }\n  }\n  parse(config) {\n    const value = this.form.map(input => {\n      return input.parse(config);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return value;\n  }\n}","map":{"version":3,"names":["InputBox","constructor","idl","ui","label","value","undefined","status","document","createElement","className","input","addEventListener","parse","style","display","classList","remove","isRejected","config","form","covariant","Error","err","add","innerHTML","message","render","dom","container","innerText","appendChild","InputForm","renderForm","forEach","e","open","event","oldContainer","nextElementSibling","parentNode","removeChild","generateForm","RecordForm","fields","map","key","type","labelMap","hasOwnProperty","v","_","i","some","TupleForm","components","push","VariantForm","index","selectedIndex","variant","select","selected","options","OptionForm","ty","checked","opt","length","VecForm","len","t"],"sources":["C:\\Users\\pc\\Desktop\\aletheia-dapp\\aletheia-dapp\\canisters\\frontend\\user_interface\\node_modules\\@dfinity\\candid\\src\\candid-core.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as IDL from './idl';\n\nexport interface ParseConfig {\n  random?: boolean;\n}\n\nexport interface UIConfig {\n  input?: HTMLElement;\n  form?: InputForm;\n  parse(t: IDL.Type, config: ParseConfig, v: string): any;\n}\n\nexport interface FormConfig {\n  open?: HTMLElement;\n  event?: string;\n  labelMap?: Record<string, string>;\n  container?: HTMLElement;\n  render(t: IDL.Type): InputBox;\n}\n\nexport class InputBox {\n  public status: HTMLElement;\n  public label: string | null = null;\n  public value: any = undefined;\n\n  constructor(public idl: IDL.Type, public ui: UIConfig) {\n    const status = document.createElement('span');\n    status.className = 'status';\n    this.status = status;\n\n    if (ui.input) {\n      ui.input.addEventListener('blur', () => {\n        if ((ui.input as HTMLInputElement).value === '') {\n          return;\n        }\n        this.parse();\n      });\n      ui.input.addEventListener('input', () => {\n        status.style.display = 'none';\n        ui.input!.classList.remove('reject');\n      });\n    }\n  }\n  public isRejected(): boolean {\n    return this.value === undefined;\n  }\n\n  public parse(config: ParseConfig = {}): any {\n    if (this.ui.form) {\n      const value = this.ui.form.parse(config);\n      this.value = value;\n      return value;\n    }\n\n    if (this.ui.input) {\n      const input = this.ui.input as HTMLInputElement;\n      try {\n        const value = this.ui.parse(this.idl, config, input.value);\n        if (!this.idl.covariant(value)) {\n          throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n        }\n        this.status.style.display = 'none';\n        this.value = value;\n        return value;\n      } catch (err) {\n        input.classList.add('reject');\n        this.status.style.display = 'block';\n        this.status.innerHTML = 'InputError: ' + (err as Error).message;\n        this.value = undefined;\n        return undefined;\n      }\n    }\n    return null;\n  }\n  public render(dom: HTMLElement): void {\n    const container = document.createElement('span');\n    if (this.label) {\n      const label = document.createElement('label');\n      label.innerText = this.label;\n      container.appendChild(label);\n    }\n    if (this.ui.input) {\n      container.appendChild(this.ui.input);\n      container.appendChild(this.status);\n    }\n\n    if (this.ui.form) {\n      this.ui.form.render(container);\n    }\n    dom.appendChild(container);\n  }\n}\n\nexport abstract class InputForm {\n  public form: InputBox[] = [];\n  constructor(public ui: FormConfig) {}\n\n  public abstract parse(config: ParseConfig): any;\n  public abstract generateForm(): any;\n  public renderForm(dom: HTMLElement): void {\n    if (this.ui.container) {\n      this.form.forEach(e => e.render(this.ui.container!));\n      dom.appendChild(this.ui.container);\n    } else {\n      this.form.forEach(e => e.render(dom));\n    }\n  }\n  public render(dom: HTMLElement): void {\n    if (this.ui.open && this.ui.event) {\n      dom.appendChild(this.ui.open);\n      const form = this;\n      // eslint-disable-next-line\n      form.ui.open!.addEventListener(form.ui.event!, () => {\n        // Remove old form\n        if (form.ui.container) {\n          form.ui.container.innerHTML = '';\n        } else {\n          const oldContainer = form.ui.open!.nextElementSibling;\n          if (oldContainer) {\n            oldContainer.parentNode!.removeChild(oldContainer);\n          }\n        }\n        // Render form\n        form.generateForm();\n        form.renderForm(dom);\n      });\n    } else {\n      this.generateForm();\n      this.renderForm(dom);\n    }\n  }\n}\n\nexport class RecordForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.fields.map(([key, type]) => {\n      const input = this.ui.render(type);\n      // eslint-disable-next-line\n      if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n        input.label = this.ui.labelMap[key] + ' ';\n      } else {\n        input.label = key + ' ';\n      }\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const v: Record<string, any> = {};\n    this.fields.forEach(([key, _], i) => {\n      const value = this.form[i].parse(config);\n      v[key] = value;\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class TupleForm extends InputForm {\n  constructor(public components: IDL.Type[], public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.components.map(type => {\n      const input = this.ui.render(type);\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): any[] | undefined {\n    const v: any[] = [];\n    this.components.forEach((_, i) => {\n      const value = this.form[i].parse(config);\n      v.push(value);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class VariantForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const index = (this.ui.open as HTMLSelectElement).selectedIndex;\n    const [_, type] = this.fields[index];\n    const variant = this.ui.render(type);\n    this.form = [variant];\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const select = this.ui.open as HTMLSelectElement;\n    const selected = select.options[select.selectedIndex].value;\n    const value = this.form[0].parse(config);\n    if (value === undefined) {\n      return undefined;\n    }\n    const v: Record<string, any> = {};\n    v[selected] = value;\n    return v;\n  }\n}\n\nexport class OptionForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    if ((this.ui.open as HTMLInputElement).checked) {\n      const opt = this.ui.render(this.ty);\n      this.form = [opt];\n    } else {\n      this.form = [];\n    }\n  }\n  public parse<T>(config: ParseConfig): [T] | [] | undefined {\n    if (this.form.length === 0) {\n      return [];\n    } else {\n      const value = this.form[0].parse(config);\n      if (value === undefined) {\n        return undefined;\n      }\n      return [value];\n    }\n  }\n}\n\nexport class VecForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const len = +(this.ui.open as HTMLInputElement).value;\n    this.form = [];\n    for (let i = 0; i < len; i++) {\n      const t = this.ui.render(this.ty);\n      this.form.push(t);\n    }\n  }\n  public parse<T>(config: ParseConfig): T[] | undefined {\n    const value = this.form.map(input => {\n      return input.parse(config);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return value;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}