type SynthesisResult = 
 record {
   evidenceHighlights: vec text;
   explanation: text;
   verdict: text;
 };
type SynthesisInput = 
 record {
   explanation: text;
   verdict: text;
 };
type ResearchResult = 
 record {
   credibilityScore: float64;
   source: text;
   summary: text;
   url: text;
 };
type Question = 
 record {
   explanation: text;
   question: text;
 };
type ClaimId = text;
type Claim = text;
service : {
  generateQuestions: (claimId: ClaimId, claim: Claim) -> (vec Question);
  getQuestions: (claimId: ClaimId) -> (opt vec Question) query;
  getResearch: (claimId: ClaimId) -> (opt vec ResearchResult) query;
  retrieveInformation: (claimId: ClaimId, claim: Claim) ->
   (vec ResearchResult);
  synthesizeReport: (claimId: ClaimId, verifications: vec SynthesisInput,
   evidence: vec ResearchResult) -> (SynthesisResult);
}
