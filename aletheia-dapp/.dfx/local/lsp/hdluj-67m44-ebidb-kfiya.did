type Result_1 = 
 variant {
   err: text;
   ok: Profile;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type Rank = 
 variant {
   Associate;
   Expert;
   Junior;
   Master;
   Senior;
   Trainee;
 };
type Profile = 
 record {
   badges: vec Badge;
   createdAt: int;
   lastActive: int;
   performance: PerformanceMetrics;
   rank: Rank;
   username: opt text;
   warnings: nat;
   xp: nat;
 };
type PerformanceMetrics = 
 record {
   accuracy: float64;
   avgVerificationTime: nat;
   claimsVerified: nat;
   escalationsResolved: nat;
 };
type Badge = text;
service : {
  addBadge: (badge: Badge) -> (Result);
  createProfile: (username: opt text) -> (Result);
  getProfile: () -> (Result_1) query;
  updateProfile: (username: opt text) -> (Result);
  updateXP: (xpDelta: int) -> (Result);
}
