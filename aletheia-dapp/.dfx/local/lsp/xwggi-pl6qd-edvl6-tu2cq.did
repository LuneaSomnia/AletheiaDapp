type Result_1 = 
 variant {
   err: text;
   ok: nat;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type ClaimId = text;
type Claim = 
 record {
   category: opt text;
   complexity: text;
   content: text;
   id: ClaimId;
   submittedAt: int;
 };
type AletheianProfile = 
 record {
   expertise: vec text;
   id: AletheianId;
   lastActive: int;
   location: opt text;
   reputation: nat;
   status: text;
 };
type AletheianId = principal;
service : {
  addClaim: (claim: Claim) -> (Result);
  assignClaims: () -> (Result);
  getWorkload: (aletheianId: AletheianId) -> (Result_1);
  registerAletheian: (profile: AletheianProfile) -> (Result);
  updateAletheianStatus: (aletheianId: AletheianId, status: text) -> (Result);
}
